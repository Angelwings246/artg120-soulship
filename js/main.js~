//Taken from the Phaser 2 Tutorial, modifications by Angeleen Tan

var width = 600;
var height = 800;
var game = new Phaser.Game(width, height, Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload() {
	// preload assets
	game.load.image("sky", "assets/img/sky.png");
	game.load.image("ground", "assets/img/platform.png");
	game.load.image("star", "assets/img/star.png");
	game.load.image("diamond", "assets/img/diamond.png");
	game.load.spritesheet("dude", "assets/img/dude.png", 32, 48);
	game.load.spritesheet("baddie", "assets/img/baddie.png", 32, 32);
	
}

//global vars
var platforms, stars, scoreText, diamond, baddies;
var score = 0;

function create() {
	// place your assets
	
	
	//enable arcade physics
	game.physics.startSystem(Phaser.Physics.ARCADE);
	
	//add sky background
	game.add.sprite(0, 0, "sky");
	
	//group of ground and 4 other ledges
	platforms = game.add.group();
	
	//enables physics for all objects in platforms
	platforms.enableBody = true;
	
	//create ground
	var ground = platforms.create(0, game.world.height - 64, "ground");
	
	//scale the ground sprite
	ground.scale.setTo(2, 2);  
	
	//stops the ground from falling away when the player jumps
	ground.body.immovable = true; 
	
	//create the platforms/ledges
	var ledge = platforms.create(450, 300, "ground");
	ledge.body.immovable = true;
	ledge = platforms.create(-150, 450, "ground");
	ledge.body.immovable = true;
	ledge = platforms.create(-250, 250, "ground");
	ledge.body.immovable = true;
	ledge = platforms.create(350, 600, "ground");
	ledge.body.immovable = true;
	
	//create the player avatar
	player = game.add.sprite(32, game.world.height-150, "dude");
	
	//add physics and physics properties to player avatar
	game.physics.arcade.enable(player);
	player.body.bounce.y = 0.2;
	player.body.gravity.y = 300;
	player.body.collideWorldBounds = true;
	
	//animations for player avatar
	player.animations.add("left", [0, 1, 2, 3], 10, true);
	player.animations.add("right", [5, 6, 7, 8], 10, true);
	
	//create the group of stars
	stars = game.add.group();
	
	stars.enableBody = true; //physics for stars
	
	//create 12 stars spaced apart evenly
	for(var i = 0; i< 12; i++) {
		var star = stars.create(i * width/12, 0, "star"); //create a star and put it in the group
		star.body.gravity.y = 6; //add gravity
		star.body.bounce.y = 0.7 + Math.random() * 0.2; //add a random amount of bounce
	}
	
	//create the default score text
	scoreText = game.add.text(16, 16, "Score: 0", {fontSize: "32px", fill:"#000"});
	
	//create the diamond
	//place the diamond randomly, constrain so that it doesn't go offscreen, or into the floor
	diamond = game.add.sprite(Math.random() * (width - 32), Math.random() * (height-150), "diamond");
	game.physics.arcade.enable(diamond); //add physics
	
	//if the diamond spawned inside a platform, move the diamond to a new random location...and hope it doesn't 
	//spawn inside a platform again.  i tried a loop but couldn't get it to stop looping infinitely.
	if(game.physics.arcade.overlap(diamond, platforms)){
		diamond.x = Math.random() * (width-32);
		diamond.y = Math.random() * (height-150);
	} 	
	
	//create the group of enemies
	baddies = game.add.group();
	baddies.enableBody = true; //turn on physics so collision can occur

	var badguy = baddies.create(200, 418, "baddie"); 
	badguy.animations.add("right", [2, 3], 10, true); //make one of them face right....
	badguy.animations.play("right");
	
	badguy = baddies.create(500, 268, "baddie"); 
	badguy.animations.add("left", [0, 1], 10, true); //and the other face left
	badguy.animations.play("left");
	
}

function update() {
	// run game loop
	
	//check for collision between player avatar and the ground/ledges
	var hitPlatform = game.physics.arcade.collide(player, platforms); //player and platforms/ground
		
	//movement
	cursors = game.input.keyboard.createCursorKeys();
	
	player.body.velocity.x = 0; //reset velocity to create start-stop motion
	
	//going left
	if(cursors.left.isDown) {
		player.body.velocity.x = -150;
		player.animations.play("left");
	}
	//going right
	else if (cursors.right.isDown) {
		player.body.velocity.x = 150;
		player.animations.play("right");
	}
	//standing still
	else {
		player.animations.stop();
		player.frame = 4;
	}

	//jumping, only allowed if touching the ground/ledges
	if (cursors.up.isDown && player.body.touching.down && hitPlatform) {
		player.body.velocity.y = -350; 
	}
	
	//check for collision between star and ground/ledges
	game.physics.arcade.collide(stars, platforms);
	
	//check if player picks up a star
	game.physics.arcade.overlap(player, stars, collectStar, null, this);
	
	//check if player picks up the diamond
	game.physics.arcade.overlap(player, diamond, collectDiamond, null, this);
	
	//check if player collides with an enemy
	game.physics.arcade.overlap(player, baddies, hitBaddie, null, this);

	/*----functions---*/
	
	//function for when a player collects a star
	function collectStar(player, star) {
		star.kill(); //remove star from screen
		score += 10; //increment score
		scoreText.text = "Score: " + score; //update score text on screen
	}
	
	//function for when a player collects the diamond
	function collectDiamond(player, diamond) {
		diamond.kill(); //remove star from screen
		score += 50; //increment score
		scoreText.text = "Score: " + score; //update score text on screen
	}
	
	//function for when a player collides with an enemy
	function hitBaddie(player, baddie) {
		baddie.kill(); //remove star from screen
		score -= 25; //decrement score
		scoreText.text = "Score: " + score; //update score text on screen
	}
}